//
// BrandModelsReadBrand.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A brand. */
public struct BrandModelsReadBrand: Codable, JSONEncodable, Hashable {

    /** The unique identifier for the brand. */
    public var brandId: Int?
    /** The name of this brand. */
    public var name: String?
    /** External Id of the brand. */
    public var externalId: String?
    /** The localized descriptions of the brand. */
    public var descriptions: [SharedModelsLocalizableContent]?

    public init(brandId: Int? = nil, name: String? = nil, externalId: String? = nil, descriptions: [SharedModelsLocalizableContent]? = nil) {
        self.brandId = brandId
        self.name = name
        self.externalId = externalId
        self.descriptions = descriptions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case brandId = "BrandId"
        case name = "Name"
        case externalId = "ExternalId"
        case descriptions = "Descriptions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(brandId, forKey: .brandId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(externalId, forKey: .externalId)
        try container.encodeIfPresent(descriptions, forKey: .descriptions)
    }
}

