//
// WidgetRestrictionSetupWidgetRestrictionConfiguration.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WidgetRestrictionSetupWidgetRestrictionConfiguration: Codable, JSONEncodable, Hashable {

    public enum ForcedResponsiveMode: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
    }
    public enum AllowedSizes: String, Codable, CaseIterable {
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case _4 = 4
        case _5 = 5
        case _6 = 6
    }
    public var forcedResponsiveMode: ForcedResponsiveMode?
    public var allowedSizes: [AllowedSizes]?

    public init(forcedResponsiveMode: ForcedResponsiveMode? = nil, allowedSizes: [AllowedSizes]? = nil) {
        self.forcedResponsiveMode = forcedResponsiveMode
        self.allowedSizes = allowedSizes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case forcedResponsiveMode = "ForcedResponsiveMode"
        case allowedSizes = "AllowedSizes"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(forcedResponsiveMode, forKey: .forcedResponsiveMode)
        try container.encodeIfPresent(allowedSizes, forKey: .allowedSizes)
    }
}

