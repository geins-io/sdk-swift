//
// SystemNullableValidationConfiguration.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SystemNullableValidationConfiguration: Codable, JSONEncodable, Hashable {

    public var lazyLoadConfiguration: PageWidgetLazyLoadSetupLazyLoadConfiguration?
    public var lazyLoadCollectionConfigurations: [PageWidgetLazyLoadSetupLazyLoadCollectionConfiguration]?
    public var widgetRestrictions: [String: WidgetRestrictionSetupWidgetRestrictionConfiguration]?
    public var containerRestrictions: ContainerRestrictionSetupContainerRestrictionConfiguration?

    public init(lazyLoadConfiguration: PageWidgetLazyLoadSetupLazyLoadConfiguration? = nil, lazyLoadCollectionConfigurations: [PageWidgetLazyLoadSetupLazyLoadCollectionConfiguration]? = nil, widgetRestrictions: [String: WidgetRestrictionSetupWidgetRestrictionConfiguration]? = nil, containerRestrictions: ContainerRestrictionSetupContainerRestrictionConfiguration? = nil) {
        self.lazyLoadConfiguration = lazyLoadConfiguration
        self.lazyLoadCollectionConfigurations = lazyLoadCollectionConfigurations
        self.widgetRestrictions = widgetRestrictions
        self.containerRestrictions = containerRestrictions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lazyLoadConfiguration = "LazyLoadConfiguration"
        case lazyLoadCollectionConfigurations = "LazyLoadCollectionConfigurations"
        case widgetRestrictions = "WidgetRestrictions"
        case containerRestrictions = "ContainerRestrictions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(lazyLoadConfiguration, forKey: .lazyLoadConfiguration)
        try container.encodeIfPresent(lazyLoadCollectionConfigurations, forKey: .lazyLoadCollectionConfigurations)
        try container.encodeIfPresent(widgetRestrictions, forKey: .widgetRestrictions)
        try container.encodeIfPresent(containerRestrictions, forKey: .containerRestrictions)
    }
}

