//
// ShippingModelsShippingOption.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ShippingModelsShippingOption: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var externalId: String?
    public var name: String?
    public var fee: Double?
    public var logo: String?
    public var shippingData: String?
    public var options: [ShippingModelsShippingSubOption]?

    public init(id: Int? = nil, externalId: String? = nil, name: String? = nil, fee: Double? = nil, logo: String? = nil, shippingData: String? = nil, options: [ShippingModelsShippingSubOption]? = nil) {
        self.id = id
        self.externalId = externalId
        self.name = name
        self.fee = fee
        self.logo = logo
        self.shippingData = shippingData
        self.options = options
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "Id"
        case externalId = "ExternalId"
        case name = "Name"
        case fee = "Fee"
        case logo = "Logo"
        case shippingData = "ShippingData"
        case options = "Options"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(externalId, forKey: .externalId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(fee, forKey: .fee)
        try container.encodeIfPresent(logo, forKey: .logo)
        try container.encodeIfPresent(shippingData, forKey: .shippingData)
        try container.encodeIfPresent(options, forKey: .options)
    }
}

