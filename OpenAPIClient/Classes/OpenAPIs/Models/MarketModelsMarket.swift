//
// MarketModelsMarket.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MarketModelsMarket: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var name: String?
    public var displayName: String?
    public var currency: String?
    public var vatRate: Double?
    public var marketPrefix: String?
    public var countryId: Int?
    public var currencyId: Int?
    public var currencyRate: Double?
    public var languageId: Int?
    public var language: String?

    public init(id: Int? = nil, name: String? = nil, displayName: String? = nil, currency: String? = nil, vatRate: Double? = nil, marketPrefix: String? = nil, countryId: Int? = nil, currencyId: Int? = nil, currencyRate: Double? = nil, languageId: Int? = nil, language: String? = nil) {
        self.id = id
        self.name = name
        self.displayName = displayName
        self.currency = currency
        self.vatRate = vatRate
        self.marketPrefix = marketPrefix
        self.countryId = countryId
        self.currencyId = currencyId
        self.currencyRate = currencyRate
        self.languageId = languageId
        self.language = language
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "Id"
        case name = "Name"
        case displayName = "DisplayName"
        case currency = "Currency"
        case vatRate = "VatRate"
        case marketPrefix = "MarketPrefix"
        case countryId = "CountryId"
        case currencyId = "CurrencyId"
        case currencyRate = "CurrencyRate"
        case languageId = "LanguageId"
        case language = "Language"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(currency, forKey: .currency)
        try container.encodeIfPresent(vatRate, forKey: .vatRate)
        try container.encodeIfPresent(marketPrefix, forKey: .marketPrefix)
        try container.encodeIfPresent(countryId, forKey: .countryId)
        try container.encodeIfPresent(currencyId, forKey: .currencyId)
        try container.encodeIfPresent(currencyRate, forKey: .currencyRate)
        try container.encodeIfPresent(languageId, forKey: .languageId)
        try container.encodeIfPresent(language, forKey: .language)
    }
}

