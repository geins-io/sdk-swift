//
// PriceListModelsPriceListPriceResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The response of a PriceListPrice request. */
public struct PriceListModelsPriceListPriceResponse: Codable, JSONEncodable, Hashable {

    /** Information about the outcome of the request. */
    public var message: String?
    /** Supplied PriceList prices that failed validation. */
    public var invalid: [PriceListModelsWritePriceListPrice]?
    /** Supplied PriceList prices that were technically valid, but couldn't be found. */
    public var notFound: [PriceListModelsWritePriceListPrice]?
    /** Number of price updates resulting from the request. */
    public var updateCount: Int?

    public init(message: String? = nil, invalid: [PriceListModelsWritePriceListPrice]? = nil, notFound: [PriceListModelsWritePriceListPrice]? = nil, updateCount: Int? = nil) {
        self.message = message
        self.invalid = invalid
        self.notFound = notFound
        self.updateCount = updateCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case message = "Message"
        case invalid = "Invalid"
        case notFound = "NotFound"
        case updateCount = "UpdateCount"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(invalid, forKey: .invalid)
        try container.encodeIfPresent(notFound, forKey: .notFound)
        try container.encodeIfPresent(updateCount, forKey: .updateCount)
    }
}

