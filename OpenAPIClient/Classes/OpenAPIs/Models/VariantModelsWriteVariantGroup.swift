//
// VariantModelsWriteVariantGroup.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A variant group for a collection of related variants. */
public struct VariantModelsWriteVariantGroup: Codable, JSONEncodable, Hashable {

    /** The optional internal name of the variant group. */
    public var name: String?
    /** A setting to control the display behaviour in product listings of variants belonging to this group. */
    public var collapseInLists: Bool?
    /** The labels of the variant data that this group keeps track of */
    public var variantLabels: [String]?
    /** Products to be created and connected to the group. */
    public var products: [ProductModelsWriteProduct]?

    public init(name: String? = nil, collapseInLists: Bool? = nil, variantLabels: [String]? = nil, products: [ProductModelsWriteProduct]? = nil) {
        self.name = name
        self.collapseInLists = collapseInLists
        self.variantLabels = variantLabels
        self.products = products
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case collapseInLists = "CollapseInLists"
        case variantLabels = "VariantLabels"
        case products = "Products"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(collapseInLists, forKey: .collapseInLists)
        try container.encodeIfPresent(variantLabels, forKey: .variantLabels)
        try container.encodeIfPresent(products, forKey: .products)
    }
}

