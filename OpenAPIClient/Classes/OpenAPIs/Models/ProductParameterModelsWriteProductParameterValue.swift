//
// ProductParameterModelsWriteProductParameterValue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A parameter value for a product. */
public struct ProductParameterModelsWriteProductParameterValue: Codable, JSONEncodable, Hashable {

    /** The product id of the parameter. */
    public var productId: Int?
    /** The unique identifier of the parameter that this value belongs to. */
    public var parameterId: Int?
    /** The identifying value of the parameter. */
    public var value: String?
    /** The localized descriptions of the parameter. */
    public var localizedDescriptions: [SharedModelsLocalizableContent]?

    public init(productId: Int? = nil, parameterId: Int? = nil, value: String? = nil, localizedDescriptions: [SharedModelsLocalizableContent]? = nil) {
        self.productId = productId
        self.parameterId = parameterId
        self.value = value
        self.localizedDescriptions = localizedDescriptions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case productId = "ProductId"
        case parameterId = "ParameterId"
        case value = "Value"
        case localizedDescriptions = "LocalizedDescriptions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(productId, forKey: .productId)
        try container.encodeIfPresent(parameterId, forKey: .parameterId)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(localizedDescriptions, forKey: .localizedDescriptions)
    }
}

